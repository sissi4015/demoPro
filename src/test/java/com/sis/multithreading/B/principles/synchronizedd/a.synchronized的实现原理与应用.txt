《Java并发编程的艺术》

第二章 Java并发机制的底层实现原理

2.2 synchronized的实现原理和应用

重点1：Java SE 1.6对synchronized进行优化，为了减少获得锁和释放锁带来的性能消耗而引入了偏向锁和轻量级锁

重点2：表现形式：Java中的每一个对象都可以作为锁
                1）普通同步方法：锁是当前实例对象
                2）静态同步方法：锁是当前类的Class对象
                3）同步方法块：synchronized括号里配置的对象

重点3：原理：JVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者的实现细节不同。
            1）代码块同步是使用monitorenter和monitorexit指令实现的
            2）方法同步未详细说明，但是同样能通过以上两个指令完成

            monitorenter指令是在编译后插入到同步代码块的开始位置，monitorexit是插入到方法块结束处和异常处。

            JVM保证两个位置是配对的，任何一个对象都有一个monitor与之关联，
                当且一个monitor被持有后，它将处于锁定状态。

            线程执行到monitorenter指令时，将会尝试获取对象所对应的monitor的所有权，即尝试获取对象的锁。


